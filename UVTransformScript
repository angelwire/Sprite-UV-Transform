///@func sprite_get_uvs_transformed(sprite1, subimg1, sprite2, subimg2)
///@desc Returns a transform array that can be used in a shader to align the UVs of sprite2 with sprite1 (takes cropping into account)
///@param spr1 {Sprite} The sprite align the UVs to
///@param subimg1 {real} The sprite subimage to align the UVs to
///@param spr2 {Sprite} The sprite with UVs that will be aligned
///@param subimg1 {real} The sprite subimage with UVs that will be aligned
function sprite_get_uvs_transformed(_spr1, _subimg1, _spr2, _subimg2)
{
	//Get the uvs of the sprites
	var _uv1 = sprite_get_uvs(_spr1, _subimg1);
	var _uv2 = sprite_get_uvs(_spr2, _subimg2);
	
	//Naming convention for variables
	//_{uv}_{value}_{coordinate_space}
	
	//Get the sprite normalized values for the left and top cropping 
	var _uv1_crop_left_sprite_total = _uv1[4] / sprite_get_width(_spr1);
	var _uv1_crop_top_sprite_total = _uv1[5] / sprite_get_height(_spr1);
	var _uv2_crop_left_sprite_total = _uv2[4] / sprite_get_width(_spr2);
	var _uv2_crop_top_sprite_total = _uv2[5] / sprite_get_height(_spr2);
	//These are the left and top crop values as a percentage of the uncropped sprite size
	
	//Get the sprite size relative to the texture page
	var _uv1_width_texture_page = _uv1[2] - _uv1[0];
	var _uv1_height_texture_page = _uv1[3] - _uv1[1];
	var _uv2_width_texture_page = _uv2[2] - _uv2[0];
	var _uv2_height_texture_page = _uv2[3] - _uv2[1];
	//These are the width and height values of the uncropped sprite sizes relative to the texture page
	//Get the cropped size by subtracting the x1 from the x2 (texture page size)
	//Scale it by the cropped value relative to the uncropped value
	
	//Get the uncropped sizes on the texture page
	var _uv1_uncropped_width_texture_page = _uv1_width_texture_page / _uv1[6];
	var _uv1_uncropped_height_texture_page = _uv1_height_texture_page / _uv1[7];
	var _uv2_uncropped_width_texture_page = _uv2_width_texture_page / _uv2[6];
	var _uv2_uncropped_height_texture_page = _uv2_height_texture_page / _uv2[7];
	
	//Get the uncropped coordinates relative to the texture page
	var _uv1_x_texture_page = _uv1[0] - (_uv1_uncropped_width_texture_page * _uv1_crop_left_sprite_total);
	var _uv1_y_texture_page = _uv1[1] - (_uv1_uncropped_height_texture_page * _uv1_crop_top_sprite_total);
	var _uv2_x_texture_page = _uv2[0] - (_uv2_uncropped_width_texture_page * _uv2_crop_left_sprite_total);
	var _uv2_y_texture_page = _uv2[1] - (_uv2_uncropped_height_texture_page * _uv2_crop_top_sprite_total);
	//Get the x&y values by taking the cropped texture page coordinates and subtracting them by the crop amount(cropped sprite percentage) multiplied by the total sprite size(in the texture page)
	
	//Get the positional offsets
	var _x_scale = _uv2_uncropped_width_texture_page / _uv1_uncropped_width_texture_page;
	var _y_scale = _uv2_uncropped_height_texture_page / _uv1_uncropped_height_texture_page;
	
	var _x_offset = _uv2_x_texture_page - _uv1_x_texture_page * _x_scale;
	var _y_offset = _uv2_y_texture_page - _uv1_y_texture_page * _y_scale;
	//The script should return a value that transforms uv2 to match uv1 by addition and multiplication
	//It is also inversely applicable to transform uv1 to uv2 by subtraction and division
	
	//Pack the values into an array and return it
	return [_x_offset, _y_offset, _x_scale, _y_scale];
}
